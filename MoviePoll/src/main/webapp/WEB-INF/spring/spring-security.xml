<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- Access permissions -->

	<http use-expressions="true">
		<intercept-url pattern="/web-resources/**" access="permitAll" />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/editMovies" access="hasRole('Admin')" />
		<intercept-url pattern="/addUser" access="hasRole('Admin')" />
		<intercept-url pattern="/editUsers" access="hasRole('Admin')" />
		<intercept-url pattern="/**" access="isAuthenticated()" />

		<form-login login-page="/login" default-target-url="/"	authentication-failure-url="/login" />

		<logout logout-url="/logout" logout-success-url="/" />
		
		<!-- session-registry-alias for getting active users -->
		<session-management>
        	<concurrency-control max-sessions="1" session-registry-alias="sessionRegistry"/>
    	</session-management>
		
	</http>

	<!-- Authentication & encryption -->

	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService"></beans:property>
	</beans:bean>
	
<!-- deprecated -->
<!-- 	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager"> -->
<!-- 		<beans:property name="providers"> -->
<!-- 			<beans:list> -->
<!-- 				<beans:ref local="daoAuthenticationProvider" /> -->
<!-- 			</beans:list> -->
<!-- 		</beans:property> -->
<!-- 	</beans:bean> -->

<!-- replacement -->
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
   		<beans:constructor-arg ref="daoAuthenticationProvider"/>
	</beans:bean>

	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="encoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>	
	
</beans:beans>